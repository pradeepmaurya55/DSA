/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        
        if(head==NULL) return NULL;
        Node *mhead,*l1,*l2;
        
        l1=head;
        while(l1!=NULL)
        {
            l2= new Node(l1->val);
            l2->next=l1->random;
            l1->random=l2;
            l1=l1->next;
        }
        
        mhead=head->random;
        
        l1=head;
        while(l1!=NULL)
        {
            l2=l1->random;
            if(l2->next)
            {
                l2->random=l2->next->random;
            }
            else{
                l2->random=NULL;
            }
            
            l1=l1->next;
        }
        
        l1=head;
        while(l1!=NULL)
        {
            l2=l1->random;
            l1->random=l2->next;
            if(l1->next)
            {
                l2->next=l1->next->random;
            }
            else{
                l2->next=NULL;
            }
            
            l1=l1->next;
        }
        
        return mhead;
    }
};