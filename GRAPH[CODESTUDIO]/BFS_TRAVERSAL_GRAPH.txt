#include<bits/stdc++.h>


vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    vector<int> ans;
    vector<int> vis(vertex,0);
    queue<int> q;
    vector<int>adj[vertex+1];
    
    for(int i=0; i<edges.size(); i++)
    {
        int u = edges[i].first;
        int v = edges[i].second;
        
        adj[u].push_back(v);
        adj[v].push_back(u);

    }
    
    for(int i=0;i<vertex;i++)
      sort(adj[i].begin(),adj[i].end());
    
    for(int i=0;i<vertex;i++)
    {
        if(!vis[i])
        {
            q.push(i);
            vis[i]=1;
            while(!q.empty())
            {
                int node=q.front();
                q.pop();
                ans.push_back(node);
        
                for(auto i:adj[node])
                {
                    if(!vis[i])
                    {
                        q.push(i);
                        vis[i]=1;
                    }
                }
            }
        }
        
    }
    
    return ans;
}