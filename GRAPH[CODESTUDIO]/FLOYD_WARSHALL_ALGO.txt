int floydWarshall(int n, int m, int src, int dest, vector<vector<int>> &edges)
{
    vector<vector<int>>dist(n+1,vector<int>(n+1,1e9));
       
    for(int i=0;i<edges.size();i++)
    {
        int n1=edges[i][0];
        int n2=edges[i][1];
        int wt=edges[i][2];
        dist[n1][n2]=wt;
    }
    
     for(int i=1;i<=n;i++)
    {
       dist[i][i]=0;
    }
    
    for(int k=1;k<=n;k++)
    {
        for(int j=1;j<=n;j++)
        {
            for(int i=1;i<=n;i++)
            {
                if(dist[i][k]==1e9 || dist[k][j]==1e9)
                    continue;
                if(dist[i][j]>dist[i][k]+dist[k][j])
                      dist[i][j]=dist[i][k]+dist[k][j]; 
            }
        }
    }
    
    return dist[src][dest];
}