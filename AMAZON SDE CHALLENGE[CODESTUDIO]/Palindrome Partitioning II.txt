#include <bits/stdc++.h> 
bool ispalindrome(string str,int i,int j)
{
    while(i<j)
    {
        if(str[i++]!=str[j--]) return false;
    }
    return true;
}

int solve(string str,int i,int j,vector<vector<int>> &dp)
{
    if(i>=j || ispalindrome(str,i,j)) return 0;
    if(dp[i][j]!=-1) return dp[i][j];
        
    int ans=INT_MAX;
    int curr;
    
    for(int k=i;k<j;k++)
    {
        if(ispalindrome(str,i,k))
        {
         curr=1+solve(str,k+1,j,dp);
         ans=min(ans,curr);
        }
    }
    return dp[i][j]=ans;
}
int minimumCuts(string str) 
{
    int n=str.size();
    vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
    return solve(str,0,n-1,dp);
}
