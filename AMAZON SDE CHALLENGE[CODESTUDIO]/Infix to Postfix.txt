#include <bits/stdc++.h>
int prior(char c)
{
    if(c=='*'||c=='/') return 2;
    else if (c=='+'||c=='-')return 1;
    else if(c=='^') return 3;
    else return -1;
}
string infixToPostfix(string exp)
{
    stack<char> st;
    string ans="";
    
    for(int i=0;i<exp.size();i++)
    {
        char curr=exp[i];
        if(isalnum(curr)) ans+=curr;
        
        else if(curr=='(') st.push('(');
        else if(curr==')')
        {
            while(st.top()!='(')
            {
                ans+=st.top();
                st.pop();
            }
            st.pop();//pop ( at last
        }
        else // operator is found
        {
            while(!st.empty() && prior(curr) <= prior(st.top()))
            {
                ans+=st.top();
                st.pop();
            }
            st.push(curr);
        }
    }
    
    while(!st.empty())
    {
        ans+=st.top();
        st.pop();
    }
    return ans;
}