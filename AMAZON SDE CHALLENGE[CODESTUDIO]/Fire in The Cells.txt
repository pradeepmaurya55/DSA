#include<bits/stdc++.h>
int dx[4]={0,0,1,-1};
int dy[4]={1,-1,0,0};

bool bcheck(int x,int y,int n,int m)
{
    return (x==-1 || y==-1 || x==n || y==m)?false:true;
}

bool echeck(int x,int y,int n,int m)
{
    bool res=false;
    if(x==0 || x==n-1 || y==0 || y==m-1) res=true;
    if((x==0 && y==0)||(x==n-1 && y==m-1) || (x==0 && y==m-1) || (x==n-1 && y==0)) res=false;
    return res;
}

int fireInTheCells(vector<vector<int>> &mat, int n, int m, int x, int y) 
{
    int ans=-1;
    if(mat[x][y]==0)
    {
        ans=-1;
    }
    
    queue<vector<int>> player;
    queue<vector<int>> fire;
    
    player.push({x,y});//push intial positiion of player 
    
    for(int i=0;i<n;i++)//push intial cells of fire
    {
        for(int j=0;j<m;j++)
        {
            if(mat[i][j]==0)
            {
                fire.push({i,j});
            }
        }
    }
    
    int time=0;
    
    while(!player.empty())
    {
        int s=fire.size();
        for(int i=0;i<s;i++) // spread fire
        {
            vector<int> temp=fire.front(); // store x and y position
            fire.pop();
            for(int j=0;j<4;j++)
            {
                vector<int> temp2 = {dx[j]+temp[0],dy[j]+temp[1]};
                if(bcheck(temp2[0],temp2[1],n,m))
                {
                    if(mat[temp2[0]][temp2[1]]==1)
                    {
                        fire.push(temp2);
                        mat[temp2[0]][temp2[1]]=0;
                    }
                }
            }
        }
        
        s=player.size();
        for(int i=0;i<s;i++)
        {
          vector<int> temp=player.front();
          player.pop();
          if(echeck(temp[0],temp[1],n,m))
            {
                ans=time;
                break;
            }
          for(int j=0;j<4;j++)
          {
              vector<int> temp2={dx[j]+temp[0],dy[j]+temp[1]};
              if(bcheck(temp2[0],temp2[1],n,m))
              {
                  if(mat[temp2[0]][temp2[1]]==1) player.push(temp2);
              }
          }
          
        }
        
        time++;
        if(ans!=-1) break;
    }
    return ans;
}