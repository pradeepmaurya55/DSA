#include <bits/stdc++.h> 

int dx[4]={0,0,-1,1};
int dy[4]={1,-1,0,0};

int solve(vector<vector<int>> &mat,int x,int y,int n,vector<vector<int>> &dp)
{
    if(dp[x][y]!=-1) return dp[x][y];
    
    int t=0;
    for(int k=0;k<4;k++)
    {
        int nx=x+dx[k];
        int ny=y+dy[k];
        if(nx>=0 && ny>=0 && nx<n && ny<n && (mat[x][y]-mat[nx][ny]==1))
        {
            int c=solve(mat,nx,ny,n,dp);
            t=max(t,c);
        }
    }
    
    return dp[x][y]=1+t;
}

int findLongestOverAll(vector<vector<int>> &mat, int n)
{  
    int maxx=0;
    vector<vector<int>> dp(n,vector<int>(n,-1));
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            maxx=max(maxx,solve(mat,i,j,n,dp));
        }
    }
    
        return maxx;
}