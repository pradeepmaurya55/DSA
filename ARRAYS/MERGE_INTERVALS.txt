class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals)    
    {
        sort(intervals.begin(),intervals.end());
        vector<vector<int>> result;
        result.push_back(intervals[0]);
        for(int i = 0 ; i<intervals.size();i++)
        {
            if(result.back()[1]>=intervals[i][0])
            {
                result.back()[1]=max(intervals[i][1],result.back()[1]);
            }
            else
            {
                result.push_back(intervals[i]);
            }
        }
        
    return result;
        
    }
};

//ANOTHER SOLUTION THAT GOT TLE REJECTED






/*
this soltuion got TLE for one case.
class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals)    
    {
        sort(intervals.begin(),intervals.end());
        for(int i = 0 ; i<intervals.size()-1;i++)
        {
            if(intervals[i][1]>=intervals[i+1][0])
            {
                intervals[i][1]=max(intervals[i][1],intervals[i+1][1]);
                intervals.erase(intervals.begin()+i+1);
                i--;
            }
        }
        
    return intervals;
        
    }
};
*/