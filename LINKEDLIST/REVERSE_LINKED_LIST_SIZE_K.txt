/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        
        if(head==NULL||head->next==NULL){return head;}
        int len=0;
        ListNode* mhead=new ListNode(-1);
        mhead->next=head;
        ListNode* cur=mhead->next;
        ListNode* pre=mhead;
        ListNode* nex;
        
        while(cur!=NULL)
        {
            len++;
            cur=cur->next;
        }
        
        while(len>=k)
        {
            cur=pre->next;
            nex=cur->next;
            for(int i=1;i<k;i++)
            {
                cur->next=nex->next;
                nex->next=pre->next;
                pre->next=nex;
                nex=cur->next;
            }
            pre=cur;
            len=len-k;
        }
        
        return mhead->next;
        
    }
};