#include<bits/stdc++.h>

vector<int> findMedian(vector<int> &arr, int n){
	priority_queue<int> s;
    priority_queue<int, vector<int> , greater<int>> g;
    vector<int> vec;
    s.push(arr[0]);
    vec.push_back(arr[0]);
    
    for(int i=1;i<n;i++)
    {
        if(s.size()>g.size()) 
        {
            if(s.top()>arr[i])
            {
                g.push(s.top());
                s.pop();
                s.push(arr[i]);
            }
            
            else
            {
                g.push(arr[i]);
            }
            vec.push_back((s.top()+g.top())/2.0);
        }
        
        else
        {
            if(g.top()<arr[i])
            {
                s.push(g.top());
                g.pop();
                g.push(arr[i]);
            }
            
            else
            {
                s.push(arr[i]);
            }
            
            vec.push_back(s.top());
        }
    }
    
    return vec;
}
