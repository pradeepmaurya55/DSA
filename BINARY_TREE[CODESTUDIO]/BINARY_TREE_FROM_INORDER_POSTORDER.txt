/************************************************************
   
   Following is the TreeNode class structure
   
   class TreeNode<T>
   { 
   public:
        T data; 
        TreeNode<T> *left;
        TreeNode<T> *right;
   
        TreeNode(T data) 
  		{ 
            this -> data = data; 
            left = NULL; 
            right = NULL; 
        }
   };
   
   
 ************************************************************/

int findPos(vector<int> inorder, int element, int n){
    for(int i = 0; i < n; i++){
        if(element == inorder[i])
            return i;
    }
    return -1;
}
TreeNode<int>* solve(vector<int>& postOrder, vector<int>& inOrder, int &index, int inorderStart, int inorderEnd, int n){
    if( index < 0 || inorderStart > inorderEnd){
        return NULL;
    }
    
    int element = postOrder[index--];
    TreeNode<int>* root = new TreeNode<int>(element);
    int pos = findPos(inOrder, element, n);
    
    root->right = solve(postOrder, inOrder, index, pos+1, inorderEnd, n);
    root->left = solve(postOrder, inOrder, index, inorderStart, pos-1, n);
    
    return root;
    
} 

TreeNode<int>* getTreeFromPostorderAndInorder(vector<int>& postOrder, vector<int>& inOrder) 
{   int n = postOrder.size();
    int postorderIndex = n-1;
    TreeNode<int>* ans = solve(postOrder, inOrder, postorderIndex, 0, n-1, n);
    return ans;
}