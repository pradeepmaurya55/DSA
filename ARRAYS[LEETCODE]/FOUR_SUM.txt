class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        
        set<vector<int>> ans;
        int n=nums.size();
        sort(nums.begin(),nums.end());
        
       
        for(int i = 0;i<n-3;i++)
        {
          if(i>0 && nums[i]==nums[i-1]) continue;
          for(int j=i+1;j<n-2;j++)
          {
            if(j>i+1 && nums[j]==nums[j-1]) continue;
            int front=j+1;
            int back=n-1;
            
              while(front<back)
              {
                  double sum=(0.0+nums[i]+nums[j]+nums[front]+nums[back]-target);
                  if(sum<0) {front++;}
                  else if(sum>0){back--;}
                  else
                  {
                     
                      ans.insert({nums[i],nums[j],nums[front],nums[back]});
                      do{front++;}while(nums[front]==nums[front-1]&&front<back);
                      do{back--;}while(nums[back]==nums[back+1]&&front<back);
                  }
              }
          }
        }
        
        vector<vector<int>> solve(ans.begin(),ans.end());
        
    return solve;
        
    }
};