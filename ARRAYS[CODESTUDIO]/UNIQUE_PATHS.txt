#include <bits/stdc++.h> 
 int solve(int m, int n ,int i ,int j, vector<vector<int>> &dp)
    {
    //if value already stored return the value
        if(dp[i][j]!=-1)return dp[i][j];

    //if reached destination return 1
        if(i==m-1 && j==n-1) return 1;

    //check for boundary cases
        if(i>=m || j>=n) return 0;

    //recursice calls for both steps i j
        return dp[i][j]=solve(m,n,i,j+1,dp) + solve(m,n,i+1,j,dp) ;
    }


 int uniquePaths(int m, int n) 
    {
        vector<vector<int>> dp(m+1,vector<int>(n+1,-1));
        if(m==1 && n==1)
            return 1;
        solve(m,n,0,0,dp);
        return dp[0][0];
    }