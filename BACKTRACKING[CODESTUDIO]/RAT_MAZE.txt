
void solve(vector<vector<int> > &maze,vector<vector<int> > &sol,vector<vector<int> > &vis, int n,int row,int col)
{
    if(row<0 || col<0 || 
       row>=n || col>=n || 
       maze[row][col]==0 || vis[row][col]==1 ) return;
    
     if(row==n-1 && col==n-1)
     {
         vis[row][col]=1;
         vector<int> ts;
         for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
                 ts.push_back(vis[i][j]);
     
         sol.push_back(ts);
     }
    
    vis[row][col]=1;
    solve(maze,sol,vis,n,row+1,col);
    solve(maze,sol,vis,n,row-1,col);
    solve(maze,sol,vis,n,row,col+1);
    solve(maze,sol,vis,n,row,col-1);
    vis[row][col]=0;
    
}

vector<vector<int> > ratInAMaze(vector<vector<int> > &maze, int n)
{
  vector<vector<int> > sol;
    vector<vector<int> > vis(n,vector<int>(n,0));
    solve(maze,sol,vis,n,0,0);
    return sol;
  
}