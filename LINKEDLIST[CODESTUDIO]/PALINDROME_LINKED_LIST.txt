#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

bool isPalindrome(LinkedListNode<int> *head) 
{
     if(head==NULL)
     {
        return true;
     }
    LinkedListNode<int> * slow=head;
    LinkedListNode<int> * fast=head;
    LinkedListNode<int> * curr;
    LinkedListNode<int> * nex;
    
    //find middle of linked list
    while(fast->next!=NULL && fast->next->next!=NULL)
    {
        slow=slow->next;
        fast=fast->next->next;
    }
    
    //reverse the right half of linked list
    //use fast as prev
    fast=NULL;
    curr=slow->next;
    while(curr!=NULL)
    {
        nex=curr->next;
        curr->next=fast;//curr->next=prev;
        fast=curr;//prev=curr;
        curr=nex;
    }
    
    slow->next=fast;   
    fast=slow->next;
    slow=head;
    
    while(fast!=NULL)
    {
        if(fast->data!=slow->data) return false;
        slow=slow->next;
        fast=fast->next;
    }
    
    return true;

}