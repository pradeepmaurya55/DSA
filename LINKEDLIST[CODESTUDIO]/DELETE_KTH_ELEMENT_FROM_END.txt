#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

LinkedListNode<int>* removeKthNode(LinkedListNode<int> *head, int K)
{
   // Write your code here.
   if(head==NULL || K==0){    // very base case
       return head;
   }
   
   LinkedListNode<int> *temp = new LinkedListNode<int>(-1);
   temp->next = head;
   
   LinkedListNode<int> *slow = temp;
   LinkedListNode<int> *fast = temp;

    // create gap of 'K' b/w slow and fast
   for(int i=1;i<=K;i++){    
       fast = fast->next;
   }
    // slow will be at 'K' nodes from end
   while(fast!=NULL && fast->next != NULL){
       fast = fast->next;
       slow = slow->next;
   } 
    
   // delete 
   slow->next = slow->next->next;  
   
   return temp->next;     
}